-- DUELS - Murderers VS Sheriffs Script with Full GUI Features
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local Window = Rayfield:CreateWindow({
    Name = "DUELS - Murderers VS Sheriffs",
    LoadingTitle = "Loading DUELS Script...",
    LoadingSubtitle = "by YourName",
    ConfigurationSaving = { Enabled = false },
    Discord = { Enabled = false },
    KeySystem = false,
})

local espEnabled = false
local silentAimEnabled = false
local autoKnifeEnabled = false
local autoKitEnabled = false
local hitboxExpanderEnabled = false
local hitboxSize = Vector3.new(5, 5, 5)
local hitboxTransparency = 0.5
local onlyAffectEnemies = true
local useWhitelist = false
local playerList = { Whitelist = {}, Blacklist = {} }

-- === GUI Tab ===
local FeaturesTab = Window:CreateTab("Features", 4483362458)

-- === ESP Implementation ===
local espObjects, espConnections = {}, {}

local function createESP(player)
    if player == LocalPlayer then return end
    local box = Instance.new("BoxHandleAdornment")
    box.Color3, box.AlwaysOnTop, box.ZIndex = Color3.new(1, 0, 0), true, 10
    box.Size, box.Transparency, box.Parent = Vector3.new(4, 6, 1), 0.5, workspace

    local nameTag = Instance.new("BillboardGui")
    nameTag.Size, nameTag.StudsOffset, nameTag.AlwaysOnTop, nameTag.Parent = UDim2.new(0, 100, 0, 20), Vector3.new(0, 3, 0), true, workspace

    local label = Instance.new("TextLabel")
    label.Text, label.BackgroundTransparency, label.TextColor3, label.Size, label.Parent = player.Name, 1, Color3.new(1, 1, 1), UDim2.new(1, 0, 1, 0), nameTag

    espObjects[player] = { box = box, nameTag = nameTag }

    return RunService.Heartbeat:Connect(function()
        if not espEnabled then
            box.Adornee, nameTag.Adornee, nameTag.Enabled = nil, nil, false
            return
        end
        local character = player.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            box.Adornee, nameTag.Adornee, nameTag.Enabled = character.HumanoidRootPart, character.HumanoidRootPart, true
        else
            box.Adornee, nameTag.Adornee, nameTag.Enabled = nil, nil, false
        end
    end)
end

local function enableESP(value)
    espEnabled = value
    if espEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if not espConnections[player] then
                espConnections[player] = createESP(player)
            end
        end
    else
        for _, esp in pairs(espObjects) do
            esp.box.Adornee, esp.nameTag.Adornee, esp.nameTag.Enabled = nil, nil, false
        end
        for _, connection in pairs(espConnections) do
            connection:Disconnect()
        end
        espConnections = {}
    end
end

Players.PlayerAdded:Connect(function(player)
    if espEnabled then espConnections[player] = createESP(player) end
end)
Players.PlayerRemoving:Connect(function(player)
    if espConnections[player] then espConnections[player]:Disconnect() end
    if espObjects[player] then
        if espObjects[player].box then espObjects[player].box:Destroy() end
        if espObjects[player].nameTag then espObjects[player].nameTag:Destroy() end
    end
    espConnections[player], espObjects[player] = nil, nil
end)

-- === Silent Aim Placeholder ===
local function toggleSilentAim(value)
    silentAimEnabled = value
    print("[Silent Aim]", value and "ENABLED" or "DISABLED")
end

-- === Auto Knife ===
local autoKnifeThread
local function toggleAutoKnife(value)
    autoKnifeEnabled = value
    if value then
        autoKnifeThread = task.spawn(function()
            while autoKnifeEnabled do
                local character = LocalPlayer.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    for _, player in pairs(Players:GetPlayers()) do
                        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            if (character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude < 5 then
                                print("Auto Knife attacking:", player.Name)
                            end
                        end
                    end
                end
                task.wait(0.5)
            end
        end)
    else
        autoKnifeThread = nil
    end
end

-- === Auto Kit Selection ===
local autoKitConnection
local function toggleAutoKit(value)
    autoKitEnabled = value
    if value then
        if not autoKitConnection then
            autoKitConnection = LocalPlayer.CharacterAdded:Connect(function()
                task.wait(1)
                print("Auto kit selection triggered")
            end)
        end
        if LocalPlayer.Character then print("Auto kit selection triggered") end
    elseif autoKitConnection then
        autoKitConnection:Disconnect()
        autoKitConnection = nil
    end
end

-- === Hitbox Expander ===
local hitboxExpanderThread
local function resizeHead(part)
    if part then
        part.Size = hitboxSize
        part.Transparency = hitboxTransparency
        part.CanCollide = false
    end
end

local function stopResizing(part)
    return part and part.Size == Vector3.new(10, 15, 15)
end

local function isTargetable(player)
    if player == LocalPlayer then return false end
    if useWhitelist then return table.find(playerList.Whitelist, player.Name)
    else return not table.find(playerList.Blacklist, player.Name) end
end

local function runHitboxExpander()
    while hitboxExpanderEnabled do
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Character and isTargetable(player) then
                local head = player.Character:FindFirstChild("Head")
                if head and not stopResizing(head) then
                    if onlyAffectEnemies and player.Team ~= LocalPlayer.Team or not onlyAffectEnemies then
                        resizeHead(head)
                    end
                end
            end
        end
        task.wait(3)
    end
end

local function toggleHitboxExpander(value)
    hitboxExpanderEnabled = value
    if value and not hitboxExpanderThread then
        hitboxExpanderThread = task.spawn(runHitboxExpander)
    else
        hitboxExpanderThread = nil
    end
end

-- === GUI Toggles ===
FeaturesTab:CreateToggle({ Name = "ESP", CurrentValue = false, Callback = enableESP })
FeaturesTab:CreateToggle({ Name = "Silent Aim (Placeholder)", CurrentValue = false, Callback = toggleSilentAim })
FeaturesTab:CreateToggle({ Name = "Auto Knife", CurrentValue = false, Callback = toggleAutoKnife })
FeaturesTab:CreateToggle({ Name = "Auto Kit Select", CurrentValue = false, Callback = toggleAutoKit })

FeaturesTab:CreateToggle({ Name = "Hitbox Expander", CurrentValue = false, Callback = toggleHitboxExpander })
FeaturesTab:CreateSlider({ Name = "Hitbox Size", Range = {3, 15}, Increment = 1, Suffix = "Size", CurrentValue = 5, Callback = function(v) hitboxSize = Vector3.new(v, v, v) end })
FeaturesTab:CreateToggle({ Name = "Only Enemies", CurrentValue = true, Callback = function(v) onlyAffectEnemies = v end })
FeaturesTab:CreateToggle({ Name = "Use Whitelist Instead of Blacklist", CurrentValue = false, Callback = function(v) useWhitelist = v end })

-- Simple input system (can be expanded)
FeaturesTab:CreateInput({
    Name = "Add to Whitelist",
    PlaceholderText = "Enter player name",
    RemoveTextAfterFocusLost = true,
    Callback = function(input)
        table.insert(playerList.Whitelist, input)
        print("Added to Whitelist:", input)
    end
})

FeaturesTab:CreateInput({
    Name = "Add to Blacklist",
    PlaceholderText = "Enter player name",
    RemoveTextAfterFocusLost = true,
    Callback = function(input)
        table.insert(playerList.Blacklist, input)
        print("Added to Blacklist:", input)
    end
})

print("[DUELS Script] All features initialized.")
