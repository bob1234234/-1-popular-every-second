-- DUELS - Murderers VS Sheriffs Script with Full GUI Features
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local Window = Rayfield:CreateWindow({
    Name = "DUELS - Murderers VS Sheriffs",
    LoadingTitle = "Loading DUELS Script...",
    LoadingSubtitle = "by YourName",
    ConfigurationSaving = { Enabled = false },
    Discord = { Enabled = false },
    KeySystem = false,
})

local espEnabled = false
local aimbotEnabled = false
local autoKnifeEnabled = false
local autoKitEnabled = false
local hitboxExpanderEnabled = false
local hitboxSize = Vector3.new(5, 5, 5)
local hitboxTransparency = 0.5
local onlyAffectEnemies = true
local useWhitelist = false
local playerList = { Whitelist = {}, Blacklist = {} }

-- === ESP Implementation ===
local espObjects, espConnections = {}, {}

local function getPlayerTeam(player)
    -- Defensive check for team, fallback to nil
    return player.Team or nil
end

local function createESP(player)
    if player == LocalPlayer then return end
    local box = Instance.new("BoxHandleAdornment")
    box.AlwaysOnTop = true
    box.ZIndex = 10
    box.Size = Vector3.new(4, 6, 1)
    box.Transparency = 0.5
    box.Parent = workspace

    local nameTag = Instance.new("BillboardGui")
    nameTag.Size = UDim2.new(0, 100, 0, 20)
    nameTag.StudsOffset = Vector3.new(0, 3, 0)
    nameTag.AlwaysOnTop = true
    nameTag.Parent = workspace

    local label = Instance.new("TextLabel")
    label.BackgroundTransparency = 1
    label.Size = UDim2.new(1, 0, 1, 0)
    label.Text = player.Name
    label.Parent = nameTag

    espObjects[player] = { box = box, nameTag = nameTag, label = label }

    return RunService.Heartbeat:Connect(function()
        if not espEnabled then
            box.Adornee, nameTag.Adornee, nameTag.Enabled = nil, nil, false
            return
        end

        local character = player.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            box.Adornee = character.HumanoidRootPart
            nameTag.Adornee = character.HumanoidRootPart
            nameTag.Enabled = true

            -- Set label color by team relation
            local enemy = false
            if onlyAffectEnemies then
                enemy = getPlayerTeam(player) ~= getPlayerTeam(LocalPlayer)
            end

            if enemy then
                label.TextColor3 = Color3.new(1, 0, 0) -- Red for enemies
                box.Color3 = Color3.new(1, 0, 0)
            else
                label.TextColor3 = Color3.new(0, 0, 1) -- Blue for teammates/others
                box.Color3 = Color3.new(0, 0, 1)
            end
        else
            box.Adornee, nameTag.Adornee, nameTag.Enabled = nil, nil, false
        end
    end)
end

local function enableESP(value)
    espEnabled = value
    if espEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if not espConnections[player] then
                espConnections[player] = createESP(player)
            end
        end
    else
        for _, esp in pairs(espObjects) do
            esp.box.Adornee, esp.nameTag.Adornee, esp.nameTag.Enabled = nil, nil, false
        end
        for _, connection in pairs(espConnections) do
            connection:Disconnect()
        end
        espConnections = {}
    end
end

Players.PlayerAdded:Connect(function(player)
    if espEnabled then espConnections[player] = createESP(player) end
end)
Players.PlayerRemoving:Connect(function(player)
    if espConnections[player] then espConnections[player]:Disconnect() end
    if espObjects[player] then
        if espObjects[player].box then espObjects[player].box:Destroy() end
        if espObjects[player].nameTag then espObjects[player].nameTag:Destroy() end
    end
    espConnections[player], espObjects[player] = nil, nil
end)

-- === Aimbot Implementation ===
local aimbotFOV = 100
local aimbotFOVCircle = Drawing.new("Circle")
aimbotFOVCircle.Radius = aimbotFOV
aimbotFOVCircle.Color = Color3.fromRGB(0, 255, 0)
aimbotFOVCircle.Thickness = 1
aimbotFOVCircle.NumSides = 64
aimbotFOVCircle.Filled = false
aimbotFOVCircle.Transparency = 0.5
aimbotFOVCircle.Visible = false

local function getClosestTarget()
    local closestPlayer = nil
    local shortestDistance = math.huge
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            if onlyAffectEnemies and player.Team == LocalPlayer.Team then
                continue
            end
            if useWhitelist and not table.find(playerList.Whitelist, player.Name) then
                continue
            elseif not useWhitelist and table.find(playerList.Blacklist, player.Name) then
                continue
            end
            local screenPos, onScreen = Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            if onScreen then
                local mousePos = UserInputService:GetMouseLocation()
                local dist = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(mousePos.X, mousePos.Y)).Magnitude
                if dist < shortestDistance and dist <= aimbotFOV then
                    shortestDistance = dist
                    closestPlayer = player
                end
            end
        end
    end
    return closestPlayer
end

local aimbotConnection
local function toggleAimbot(enabled)
    aimbotEnabled = enabled
    aimbotFOVCircle.Visible = enabled

    if aimbotConnection then
        aimbotConnection:Disconnect()
        aimbotConnection = nil
    end

    if enabled then
        aimbotConnection = RunService.RenderStepped:Connect(function()
            -- Update FOV circle position
            local mousePos = UserInputService:GetMouseLocation()
            aimbotFOVCircle.Position = Vector2.new(mousePos.X, mousePos.Y)

            if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
                local target = getClosestTarget()
                if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                    local targetPos = target.Character.HumanoidRootPart.Position
                    local cameraPos = Camera.CFrame.Position
                    local direction = (targetPos - cameraPos).Unit
                    Camera.CFrame = CFrame.new(cameraPos, cameraPos + direction)
                end
            end
        end)
    else
        aimbotFOVCircle.Visible = false
    end
end

-- === Auto Knife ===
local autoKnifeThread
local function toggleAutoKnife(value)
    autoKnifeEnabled = value
    if value then
        autoKnifeThread = task.spawn(function()
            while autoKnifeEnabled do
                local character = LocalPlayer.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    for _, player in pairs(Players:GetPlayers()) do
                        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            if (character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude < 5 then
                                print("Auto Knife attacking:", player.Name)
                                -- Insert your actual knife attack logic here
                            end
                        end
                    end
                end
                task.wait(0.5)
            end
        end)
    else
        autoKnifeThread = nil
    end
end

-- === Auto Kit Selection ===
local autoKitConnection
local function toggleAutoKit(value)
    autoKitEnabled = value
    if value then
        if not autoKitConnection then
            autoKitConnection = LocalPlayer.CharacterAdded:Connect(function()
                task.wait(1)
                print("Auto kit selection triggered")
                -- Insert actual kit selection logic here
            end)
        end
        if LocalPlayer.Character then print("Auto kit selection triggered") end
    elseif autoKitConnection then
        autoKitConnection:Disconnect()
        autoKitConnection = nil
    end
end

-- === Hitbox Expander ===
local hitboxExpanderThread
local function resizeHead(part)
    if part then
        part.Size = hitboxSize
        part.Transparency = hitboxTransparency
        part.CanCollide = false
    end
end

local function stopResizing(part)
    return part and part.Size == Vector3.new(10, 15, 15)
end

local function isTargetable(player)
    if player == LocalPlayer then return false end
    if useWhitelist then
        return table.find(playerList.Whitelist, player.Name)
    else
        return not table.find(playerList.Blacklist, player.Name)
    end
end

local function runHitboxExpander()
    while hitboxExpanderEnabled do
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Character and isTargetable(player) then
                local head = player.Character:FindFirstChild("Head")
                if head and not stopResizing(head) then
                    if onlyAffectEnemies and player.Team ~= LocalPlayer.Team or not onlyAffectEnemies then
                        resizeHead(head)
                    end
                end
            end
        end
        task.wait(3)
    end
end

local function toggleHitboxExpander(value)
    hitboxExpanderEnabled = value
    if value and not hitboxExpanderThread then
        hitboxExpanderThread = task.spawn(runHitboxExpander)
    else
        hitboxExpanderThread = nil
    end
end

-- === GUI Tabs ===
local AimbotTab = Window:CreateTab("Aimbot", 4483362458)
local HitboxTab = Window:CreateTab("Hitbox", 4483362458)
local GeneralTab = Window:CreateTab("General", 4483362458)

-- Aimbot Tab Controls
AimbotTab:CreateToggle({
    Name = "Aimbot (Right Click to Aim)",
    CurrentValue = false,
    Callback = toggleAimbot,
})
AimbotTab:CreateSlider({
    Name = "Aimbot FOV",
    Range = {50, 300},
    Increment = 5,
    Suffix = "px",
    CurrentValue = aimbotFOV,
    Callback = function(value)
        aimbotFOV = value
        aimbotFOVCircle.Radius = value
    end,
})

-- Hitbox Tab Controls
HitboxTab:CreateToggle({
    Name = "Hitbox Expander",
    CurrentValue = false,
    Callback = toggleHitboxExpander,
})
HitboxTab:CreateSlider({
    Name = "Hitbox Size",
    Range = {3, 15},
    Increment = 1,
    Suffix = "Size",
    CurrentValue = 5,
    Callback = function(value)
        hitboxSize = Vector3.new(value, value, value)
    end,
})
HitboxTab:CreateToggle({
    Name = "Only Enemies",
    CurrentValue = true,
    Callback = function(value)
        onlyAffectEnemies = value
    end,
})
HitboxTab:CreateToggle({
    Name = "Use Whitelist Instead of Blacklist",
    CurrentValue = false,
    Callback = function(value)
        useWhitelist = value
    end,
})
HitboxTab:CreateInput({
    Name = "Add to Whitelist",
    PlaceholderText = "Enter player name",
    RemoveTextAfterFocusLost = true,
    Callback = function(input)
        table.insert(playerList.Whitelist, input)
        print("Added to Whitelist:", input)
    end,
})
HitboxTab:CreateInput({
    Name = "Add to Blacklist",
    PlaceholderText = "Enter player name",
    RemoveTextAfterFocusLost = true,
    Callback = function(input)
        table.insert(playerList.Blacklist, input)
        print("Added to Blacklist:", input)
    end,
})

-- General Tab Controls
GeneralTab:CreateToggle({
    Name = "ESP",
    CurrentValue = false,
    Callback = enableESP,
})
GeneralTab:CreateToggle({
    Name = "Auto Knife",
    CurrentValue = false,
    Callback = toggleAutoKnife,
})
GeneralTab:CreateToggle({
    Name = "Auto Kit Selection",
    CurrentValue = false,
    Callback = toggleAutoKit,
})

print("[DUELS Script] All features initialized.")
