local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Remote Viewer",
    LoadingTitle = "Remote Scanner",
    LoadingSubtitle = "By ChatGPT",
    ConfigurationSaving = { Enabled = false }
})

local Tab = Window:CreateTab("Remotes", 4483362458)
Tab:CreateSection("Search and Actions")

-- Clipboard helper
local copyToClipboard = setclipboard or toclipboard or function(text)
    print("Clipboard unsupported. Path:", text)
end

-- Get full path of an instance
local function getFullPath(inst)
    local path = {}
    while inst and inst ~= game do
        table.insert(path, 1, inst.Name)
        inst = inst.Parent
    end
    return table.concat(path, ".")
end

-- Scan all remotes
local remotes = {}
local function scanRemotes()
    remotes = {}
    for _, obj in ipairs(game:GetDescendants()) do
        if obj:IsA("RemoteEvent") or obj:IsA("RemoteFunction") then
            table.insert(remotes, obj)
        end
    end
end
scanRemotes()

-- Fire all button
Tab:CreateButton({
    Name = "üî• Fire All Remotes",
    Callback = function()
        for _, remote in ipairs(remotes) do
            pcall(function()
                if remote:IsA("RemoteEvent") then
                    remote:FireServer()
                elseif remote:IsA("RemoteFunction") then
                    remote:InvokeServer()
                end
            end)
        end
        Rayfield:Notify({
            Title = "Done",
            Content = "Tried firing all remotes.",
            Duration = 3
        })
    end,
})

Tab:CreateLabel("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ") -- Thin divider

-- Search bar
Tab:CreateInput({
    Name = "üîç Search Remotes",
    PlaceholderText = "Enter name to filter...",
    RemoveTextAfterFocusLost = false,
    Callback = function(text)
        showRemotes(text)
    end,
})

Tab:CreateLabel("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ") -- Thin divider

-- Show remotes
function showRemotes(filter)
    filter = filter or ""
    local matchCount = 0

    for _, remote in ipairs(remotes) do
        if remote.Name:lower():find(filter:lower()) then
            matchCount += 1
            local label = string.format("%d. [%s] %s", matchCount, remote.ClassName, remote.Name)

            -- Copy path button
            Tab:CreateButton({
                Name = "üìã Copy Path: " .. remote.Name,
                Callback = function()
                    local path = getFullPath(remote)
                    copyToClipboard(path)
                    Rayfield:Notify({
                        Title = "Copied",
                        Content = "Copied path:\n" .. path,
                        Duration = 3
                    })
                end,
            })

            -- Execute button
            Tab:CreateButton({
                Name = "‚ö° Execute: " .. remote.Name,
                Callback = function()
                    local success, err = pcall(function()
                        if remote:IsA("RemoteEvent") then
                            remote:FireServer()
                        elseif remote:IsA("RemoteFunction") then
                            remote:InvokeServer()
                        end
                    end)
                    Rayfield:Notify({
                        Title = success and "Success" or "Error",
                        Content = success and "Executed successfully" or tostring(err),
                        Duration = 3
                    })
                end,
            })

            -- Divider between remotes
            Tab:CreateLabel("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")
        end
    end

    if matchCount == 0 then
        Tab:CreateParagraph({
            Title = "No Matches",
            Content = "Try a different keyword.",
        })
    end
end

-- Show all remotes initially
showRemotes("")
